* anti-replay TLS à activer ?
* voir ce qu'il faut faire quand le build d'un packet échoue pour les trames,
  peut-être ne les insérer dans le paquet que si correctement buildé (le paquet)
  -> le MUX fait du retry opportuniste, ce serait plutôt à la quic-conn de le faire
  -> voir les URLs des gros fichiers sur haproxy.org pour tester

* voir si le paquet Version Negotiation doit être toujours émis (ou que pour une connection établie)

DDOS -> * drop des paquets 0RTT
 -> voir à activer l'option SSL_OP_NO_ANTI_REPLAY
 si problématique peut être annoncer le non-support de 0RTT avec QUIC

* limiter le boulot pour quic_lstnr_dghdlr() (nombre de dgrams à traiter ?)
réutiliser le max-poll-event ou avoir un settings indépendant

OPTIM * diminuer le nombre de tasklet_wakeup nécessaire au traitement d'un paquet

DDOS -> * Retry : revoir la génération du token
  -> générer une clé random au démarrage, changer la clé toutes les 10s (invalider la clé d'avant ou garder la clé précédente)
  -> concaténér avec l'adresse IP du client + le DCID
  -> avoir une heuristique pour activer la validation du Retry
      probablement un compteur de connexions en cours d'activation (quic-conn avant handshake), possiblement configuré via un settings global

Amélioration diagnostic QUIC
* support pcap + keylogfile
* support QLOG
  -> regarder intérêt du QLOG avec QVIS
* amélioration trace
  -> définir des niveaux de traces
  -> réutiliser la quic_conn pour lockon sur les traces MUX
  -> avoir des traces H3

Tx transport quic-conn
* utiliser sendmsg/sendmmsg pour support envoi datagrammes >16ko
URGENT -> * gérer les cas d'erreur de sendto
            utiliser fd_cant_recv sur EAGAIN ou autre cas d'erreur temporaire
* faire du retry si toutes les trames n'ont pu être envoyées en un seul envoi
  permet de supprimer la boucle opportuniste dans le qc_send du MUX

DDOS -> * Initial pkt len check : vérifier quelle soit bien checkée (1200 octets ?)

* la quic-conn peut être conservée le temps de la durée de vie du MUX
  possiblement nettoyer des parties devenus inutile de la quic-conn

* fred a fait grave de la merde
encore une fois
problème d'initialisation des adresses des connexions dans new_quic_cli_conn()
saddr utilisé pour conn->dst -> doit être conn->src
 et flag TO_SET -> FROM_SET
 et il faut récupérer l'adresse destination pour la mettre dans conn->dst
doit fixer l'affichage dans les LOGS des adresses sur haproxy.org via PROXY_PROTOCOL
